{"version":3,"sources":["pages/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","api.ts","types/ErrorType.ts","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","components/PageNavLink.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","PersonLink","person","to","slug","classNames","sex","name","PeopleTable","people","useParams","map","born","died","mother","motherName","father","fatherName","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","ErrorType","PeoplePage","useState","setPeople","isLoading","setIsLoading","NONE","isError","setIsError","useEffect","data","personWithParents","find","motherFound","fatherFound","catch","error","LOAD","finally","length","NotFoundPage","PageNavLink","text","isActive","Navbar","role","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.29c44dd6.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n\nexport default HomePage;\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={person.slug}\n    className={classNames({ 'has-text-danger': person.sex === 'f' })}\n  >\n    {person.name}\n  </Link>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams<{ slug: string }>();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={classNames({\n              'has-background-warning': person.slug === slug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n            <td>\n              {person.sex}\n            </td>\n            <td>\n              {person.born}\n            </td>\n            <td>\n              {person.died}\n            </td>\n            <td>\n              {person.mother\n                ? <PersonLink person={person.mother} />\n                : (person.motherName || '-')}\n            </td>\n            <td>\n              {person.father\n                ? <PersonLink person={person.father} />\n                : (person.fatherName || '-')}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export enum ErrorType {\n  NONE = '',\n  LOAD = 'Unable to load People data. Try again',\n}\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\nimport { ErrorType } from '../types/ErrorType';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState<ErrorType>(ErrorType.NONE);\n\n  const showError = (error: ErrorType) => {\n    setIsError(error);\n    setTimeout(() => setIsError(ErrorType.NONE), 3000);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(data => {\n        const personWithParents = data.map(person => {\n          const mother = data.find((motherFound) => {\n            return motherFound.name === person.motherName;\n          });\n          const father = data.find((fatherFound) => {\n            return fatherFound.name === person.fatherName;\n          });\n\n          return {\n            ...person,\n            mother,\n            father,\n          };\n        });\n\n        setPeople(personWithParents);\n      })\n      .catch(() => showError(ErrorType.LOAD))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">\n        People Page\n      </h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {isError}\n            </p>\n          )}\n\n          {!!people.length && <PeopleTable people={people} />}\n\n          {!isLoading && !isError && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nconst PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n\nexport default PageNavLink;\n","import React from 'react';\nimport PageNavLink from './PageNavLink';\n\nexport const Navbar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { Navbar } from './components/Navbar';\nimport './App.scss';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}